FROM centos:7

###################################
#   AUTHOR & MAINTAINER
###################################

LABEL maintainer="Vu Nguyen Vu <vunguyenvu35@gmail.com>"

ENV HTTPD_PREFIX /usr/local/apache2

RUN yum -y update 

###################################
#   INSTALL BUILD TOOLS
###################################

RUN yum install -y  bzip2-libs  \
                    bzip2 \
                    ca-certificates \
                    glibc gmp gnutls \
                    libstdc++ openldap \
                    openssl-libs \
                    p11-kit pcre \
                    readline \
                    wget \
                    expat-devel \
                    gettext-devel \
                    pcre \
                    pcre-devel \
                    openssl \
                    openssl-devel \
                    epel-release \
                    git \
                    bash \
                    python-setuptools \
                    gcc \
                    gcc-c++ \
                    perl-ExtUtils-MakeMaker \
                    zlib-devel \
                    curl-devel \
                    make \
                    unzip

RUN rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm
RUN easy_install supervisor

###################################
#   ENV
###################################

ENV HTTPD_PREFIX /usr/local/apache2

###################################
#   INSTALL php-fpm 7.2
###################################

RUN rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
RUN yum-config-manager --enable remi-php72 
RUN yum --enablerepo=remi,remi-php72 install -y php-fpm \
        php-common \
        php-opcache \
        php-pecl-apcu \
        php-cli \
        php-pear \
        php-devel \
        php-pdo \
        php-mysqlnd \
        php-pgsql \
        php-pecl-mongodb \
        php-pecl-redis \
        php-pecl-memcache \
        php-pecl-memcached \
        php-pecl-solr2 \
        php-xmlwriter \
        php-gd \
        php-mbstring \
        php-mcrypt \
        php-xml \
        php-dev \
        php-json \
        php-iconv \
        php-mysqli \
        php-dom \
        php-zip \
        libmcrypt-dev \
        make \
        curl 

ADD conf/php-fpm/php-7.2.ini /etc/php/conf.d/
ADD conf/php-fpm/php-7.2.ini /etc/php/cli/conf.d/
RUN rm /etc/php-fpm.d/www.conf
ADD conf/php-fpm/php-fpm-7.2.conf /etc/php-fpm.d/
RUN php -v
RUN mkdir /run/php-fpm
RUN chmod -R 755  /run/php-fpm root root

###################################
#   INSTALL V8JS
###################################

# Install Git latest
RUN cd /usr/src && \
    git clone https://github.com/git/git
RUN cd /usr/src/git && make prefix=/usr/local/git all && make prefix=/usr/local/git install
RUN yum -y remove git

# Use new Git
env PATH /usr/local/git/bin:$PATH

# Install Depot Tools
RUN cd /usr/src && git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
env PATH /usr/src/depot_tools:$PATH

# Install v8 #######

###################################
# DO IT ON LOCAL PC. DO NOT RUNING ON DOCKER (TOO SLOW TO INSTALL)
###################################

RUN cd /usr/src \
    fetch v8 \
    gclient sync \
    sed -i "s/crsT/crs/g" /usr/src/v8/tools/gyp/pylib/gyp/generator/make.py \
    ./tools/dev/v8gen.py -vv x64.release -- is_component_build=true \
    make s390x -j4 library=shared werror=no \
    time ninja -C out.gn/x64.release \
    time ./tools/run-tests.py --gn \ 



    /usr/src/v8/out/s390x.release/lib.target/lib/ /lib64/ \ 
    /usr/src/v8/out/s390x.release/obj.target/tools/gyp/libv8_libplatform.a /usr/lib64/ \
    /usr/src/v8/include/ /usr/local

# Install v8js
RUN echo "/usr/lib64" | pecl install v8js-1.0.0 

ENV NO_INTERACTION 1
RUN echo extension=v8js.so > /etc/php.d/v8js.ini
RUN php -m | grep v8

###################################
#   INSTALL COMPOSER
###################################

# install composer 
# RUN curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer

# Working dir
# RUN mkdir $HTTPD_PREFIX/htdocs/app
# WORKDIR $HTTPD_PREFIX/htdocs/app

# Run
COPY supervisord.conf /etc/supervisor/supervisord.conf
CMD ["/usr/bin/supervisord"]
EXPOSE 80